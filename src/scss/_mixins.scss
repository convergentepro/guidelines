// BREAKPOINTS MEDIA QUERIES:
@mixin media-bp-up($bp: '') {
    @if ($bp == '') {
        @content;
    } @else if($bp == 'sm') {
        @media screen and (min-width: map-get($breakpoints, 'sm')) {
            @content;
        }
    } @else if($bp == 'md') {
        @media screen and (min-width: map-get($breakpoints, 'md')) {
            @content;
        }
    } @else if($bp == 'lg') {
        @media screen and (min-width: map-get($breakpoints, 'lg')) {
            @content;
        }
    } @else if($bp == 'xl') {
        @media screen and (min-width: map-get($breakpoints, 'xl')) {
            @content;
        }
    } @else {
        @media screen and (min-width: map-get($breakpoints, '2xl')) {
            @content;
        }
    }
}

@mixin aspectRatios($map: $aspectRatios, $ratius) {
    @if ($enableClasses ==true) {
        @each $ratio in $map {
            .ratio-#{$ratio} {
                aspect-ratio: #{$ratio};
            }
        }
    } @else {
        aspect-ratio: #{$ratius};
    }
}

@mixin createThemeColorProps($bkgColor, $textColor) {
    $map: $brandColors;
    @if ($enableClasses ==true) {
        background-color: map-get($map, #{$bkgColor});
        color: map-get($map, #{$textColor});
    }
}
@mixin createDisplays($map: $displays, $setDisplay) {
    @if ($enableClasses==true) {
        @each $display in $map {
            .d-#{$display} {
                display: #{$display};
            }
        }
    }
}
@mixin createPositions($map: $positions) {
    @if ($enableClasses==true) {
        @each $k in $map {
            .pos-#{$k} {
                position: #{$k};
            }
        }
    }
}

@mixin createThemeColors($map: $brandColors, $hasTextColor: true) {
    @if ($enableClasses==true) {
        @each $k, $v in $brandColors {
            @if ($hasTextColor == false) {
                .bg-#{$k} {
                    background-color: map-get($brandColors, #{$k});
                }
            } @else {
                .text-#{$k} {
                    color: map-get($brandColors, #{$k});
                }
            }
        }
    }
}

//----------------------------------------------------------------
// TYPOGRAPHY: FONT SIZES
@mixin createFontsizes($map: $fontSizes, $setFontsize) {
    @if ($enableClasses == true) {
        @each $k, $v in $map {
            .fs-#{$k} {
                font-size: map-get($map, #{$k});
            }
        }

        @include mqsm {
            @each $k, $v in $map {
                .sm_fs-#{$k} {
                    font-size: map-get($map, #{$k});
                }
            }
        }

        @include mqmd {
            @each $k, $v in $map {
                .md_fs-#{$k} {
                    font-size: map-get($map, #{$k});
                }
            }
        }

        @include mqlg {
            @each $k, $v in $map {
                .lg_fs-#{$k} {
                    font-size: map-get($map, #{$k});
                }
            }
        }

        @include mqxl {
            @each $k, $v in $map {
                .xl_fs-#{$k} {
                    font-size: map-get($map, #{$k});
                }
            }
        }

        @include mq2xl {
            @each $k, $v in $map {
                .xxl_fs-#{$k} {
                    font-size: map-get($map, #{$k});
                }
            }
        }

        @include mq3xl {
            @each $k, $v in $map {
                .x2l_fs-#{$k} {
                    font-size: map-get($map, #{$k});
                }
            }
        }
    } @else {
        font-size: map-get($map, #{$setFontsize});
    }
}
