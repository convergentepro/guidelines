// ** Local Variables Maps:
$textAligns: (left, center, right, justify);
$textDecorations: (underline, line-through, overline);
$textTransforms: (uppercase, lowercase, capitalize);
$fontFamilies: (
   "display": " 'Open Sans', sans-serif",
   "monospace": " 'Source Code Pro', monospace",
);

// ** Set Font Families Classes:
@mixin setFontFamilies($bp: false) {
   @if $enableClasses ==true {
      @if ($bp == false) {
         @each $k, $v in $fontFamilies {
            .family-#{$k} {
               font-family: #{$v};
            }
         }
      }
      @if ($bp == true) {
         @each $device, $v in $breakpoints {
            @include mq-up($device) {
               @each $k, $v in $fontFamilies {
                  .family-#{$k}-#{$device} {
                     font-family: #{$v};
                  }
               }
            }
         }
      }
   }
}

// ** Set Line Height Classes:
@mixin setLineHeights($bp: false) {
   @if $enableClasses ==true {
      @if ($bp == false) {
         @for $i from 0 through 24 {
            $ratio: #{$i * 0.5 * 0.25};

            .lh-#{$i} {
               line-height: #{$ratio};
            }
         }
      }
      @if ($bp == true) {
         @each $device, $v in $breakpoints {
            @include mq-up($device) {
               @for $i from 0 through 24 {
                  $ratio: #{$i * 0.5 * 0.25};

                  .lh-#{$i}-#{$device} {
                     line-height: #{$ratio};
                  }
               }
            }
         }
      }
   }
}
