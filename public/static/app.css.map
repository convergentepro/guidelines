{"version":3,"sources":["base/_reset.scss","app.css","base/_utils.scss","config/_mixins.scss"],"names":[],"mappings":"AAAA;EACC,6BAAA;EACA,0BAAA;EACA,kBAAA;EACA,iBAAA;EACA,iBAAA;EACA,eAAA;EACA,kBAAA;EACA,kBAAA;EACA,iBAAA;EACA,kBAAA;EACA,eAAA;EACA,kBAAA;EACA,kBAAA;EACA,kBAAA;EACA,kBAAA;EACA,qBAAA;EACA,oBAAA;EAGA,gBAAA;EACA,eAAA;EACA,eAAA;EACA,eAAA;EACA,eAAA;EACA,gBAAA;EACA,gBAAA;ACDD;;ADIA,2BAAA;AACA;EACC,UAAA;EACA,YAAA;EACA,sBAAA;EACA,uBAAA;EACA,gBAAA;EACA,gBAAA;EACA,SAAA;EACA,aAAA;EACA,UAAA;EACA,8BAAA;KAAA,2BAAA;UAAA,sBAAA;EACA,sBAAA;ACDD;;ADIA;;;EAGC,sBAAA;ACDD;;ADIA;EAEC,iBAAA;EACA,aAAA;EACA,gCAAA;EACA,wBAAA;EACA,iBAAA;EACA,kBAAA;ACFD;;ADSA,iBAAA;AAIA,2BAAA;AACA;;;;EAIC,cAAA;EACA,SAAA;EACA,UAAA;EACA,uBAAA;ACTD;;ADYA;EAEC,uBAAA;EACA,gBAAA;ACVD;;ADaA;EACC,uBAAA;EACA,gBAAA;ACVD;;AC7EA,uBAAA;ACsBI;EACC,eAAA;AF2DL;;AE5DI;EACC,qBAAA;AF+DL;;AEhEI;EACC,cAAA;AFmEL;;AEpEI;EACC,aAAA;AFuEL;;AExEI;EACC,oBAAA;AF2EL;;AE5EI;EACC,aAAA;AF+EL;;AEhFI;EACC,oBAAA;AFmFL;;AEpFI;EACC,aAAA;AFuFL;;AExFI;EACC,cAAA;AF2FL","file":"app.css","sourcesContent":[":root {\n\t--color-current: currentColor;\n\t--color-alpha: transparent;\n\t--color-none: none;\n\t--indigo: #3d14b8;\n\t--salmon: #ff6347;\n\t--teal: #0e8181;\n\t--persian: #071f40;\n\t--success: #18dc7a;\n\t--danger: #e6192a;\n\t--warning: #f2d40d;\n\t--info: #1991e6;\n\t--gray100: #d7d6dc;\n\t--gray200: #9da4af;\n\t--gray300: #878a92;\n\t--gray400: #3e3b45;\n\t--themeLight: #f0f0f0;\n\t--themeDark: #1c1c22;\n\n\t// FONT SIZES VARIABLES:\n\t--fz-base: 62.5%;\n\t--fz-sm: 1.6rem;\n\t--fz-md: 2.4rem;\n\t--fz-lg: 3.2rem;\n\t--fz-xl: 4.8rem;\n\t--fz-2xl: 6.4rem;\n\t--fz-3xl: 7.2rem;\n}\n\n/* HTML & BODY ROOT NODES */\nhtml {\n\tall: unset;\n\tborder: none;\n\tbox-sizing: border-box;\n\tfont-family: sans-serif;\n\tfont-size: 62.5%;\n\tfont-weight: 300;\n\tmargin: 0;\n\toutline: none;\n\tpadding: 0;\n\ttext-size-adjust: 100%;\n\tfont-size-adjust: 0.58;\n}\n\n*::after,\n*::before,\n* {\n\tbox-sizing: border-box;\n}\n\nbody {\n\t@extend html;\n\tfont-size: 1.6rem;\n\tpadding: 2rem;\n\tbackground-color: var(--warning);\n\tcolor: var(--theme-dark);\n\tmin-height: 100vh;\n\tposition: relative;\n\n\t// & > * {\n\t// \tline-height: 0;\n\t// }\n}\n\n/* ANCHOR LINKS */\n// a {\n// }\n\n/* HEADINGS  & PARAGRAPHS */\nh1,\nh2,\nh3,\nh4 {\n\tline-height: 1;\n\tmargin: 0;\n\tpadding: 0;\n\tfont-size: var(--fz-xl);\n}\n\nh2 {\n\t@extend h1;\n\tfont-size: var(--fz-lg);\n\tfont-weight: 900;\n}\n\nh3 {\n\tfont-size: var(--fz-md);\n\tfont-weight: 600;\n}\n\n// PSEUDO ELEMENTS:\n",":root {\n  --color-current: currentColor;\n  --color-alpha: transparent;\n  --color-none: none;\n  --indigo: #3d14b8;\n  --salmon: #ff6347;\n  --teal: #0e8181;\n  --persian: #071f40;\n  --success: #18dc7a;\n  --danger: #e6192a;\n  --warning: #f2d40d;\n  --info: #1991e6;\n  --gray100: #d7d6dc;\n  --gray200: #9da4af;\n  --gray300: #878a92;\n  --gray400: #3e3b45;\n  --themeLight: #f0f0f0;\n  --themeDark: #1c1c22;\n  --fz-base: 62.5%;\n  --fz-sm: 1.6rem;\n  --fz-md: 2.4rem;\n  --fz-lg: 3.2rem;\n  --fz-xl: 4.8rem;\n  --fz-2xl: 6.4rem;\n  --fz-3xl: 7.2rem;\n}\n\n/* HTML & BODY ROOT NODES */\nhtml, body {\n  all: unset;\n  border: none;\n  box-sizing: border-box;\n  font-family: sans-serif;\n  font-size: 62.5%;\n  font-weight: 300;\n  margin: 0;\n  outline: none;\n  padding: 0;\n  text-size-adjust: 100%;\n  font-size-adjust: 0.58;\n}\n\n*::after,\n*::before,\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  font-size: 1.6rem;\n  padding: 2rem;\n  background-color: var(--warning);\n  color: var(--theme-dark);\n  min-height: 100vh;\n  position: relative;\n}\n\n/* ANCHOR LINKS */\n/* HEADINGS  & PARAGRAPHS */\nh1,\nh2,\nh3,\nh4 {\n  line-height: 1;\n  margin: 0;\n  padding: 0;\n  font-size: var(--fz-xl);\n}\n\nh2 {\n  font-size: var(--fz-lg);\n  font-weight: 900;\n}\n\nh3 {\n  font-size: var(--fz-md);\n  font-weight: 600;\n}\n\n/* UTILITIES CLASSES  */\n.d-inline {\n  display: inline;\n}\n\n.d-inblock {\n  display: inline-block;\n}\n\n.d-block {\n  display: block;\n}\n\n.d-flex {\n  display: flex;\n}\n\n.d-inflex {\n  display: inline-flex;\n}\n\n.d-grid {\n  display: grid;\n}\n\n.d-ingrid {\n  display: inline-grid;\n}\n\n.d-none {\n  display: none;\n}\n\n.d-table {\n  display: table;\n}","/* UTILITIES CLASSES  */\n@include createDisplay(\"\");\n// @include createFlexFactor(\"\");\n// @include createFlexAlignments(\"\", true, true);\n// @include createFlexFlows(\"\");\n// @include createFlexOrdering(\"\", false);\n// @include createFlexOrdering(\"\", true);\n// @include createFlexColumnsGrid(\"\", 12, 1.5rem);\n// @include createGridTemplates(\"\");\n// @include createGridSpans(\"\");\n// @include createGridGutters(\"\");\n// @include createFontFamilies(\"\");\n// @include createFontSizes(\"\");\n// @include createFontWeights(\"\");\n// @include createLineheights(\"\");\n// @include createTextProps(\"\");\n// @include createThemeColors(\"\");\n\n// @include media-up(\"sm\") {\n// \t@include createFlexColumnsGrid(\"sm\", 12, 1.5rem);\n// }\n// @include media-up(\"md\") {\n// \t@include createFlexColumnsGrid(\"md\", 12, 1.5rem);\n// }\n\n// @include media-up(\"lg\") {\n// \t@include createFlexColumnsGrid(\"lg\", 12, 1.5rem);\n// }\n\n// @include media-up(\"xl\") {\n// \t@include createFlexColumnsGrid(\"xl\", 12, 1.5rem);\n// }\n\n// @include media-up(\"xxl\") {\n// \t@include createFlexColumnsGrid(\"xxl\", 12, 1.5rem);\n// }\n","@use \"sass:math\";\n\n//----------------------------------------------------------------\n// ? LAYOUTS UTILS:\n\n// * Layout Displays:\n@mixin createDisplay($bp: \"\") {\n\t$displays: (\n\t\t\"inline\": inline,\n\t\t\"inblock\": inline-block,\n\t\t\"block\": block,\n\t\t\"flex\": flex,\n\t\t\"inflex\": inline-flex,\n\t\t\"grid\": grid,\n\t\t\"ingrid\": inline-grid,\n\t\t\"none\": none,\n\t\t\"table\": table,\n\t);\n\n\t@if $classes == true {\n\t\t@each $k, $v in $displays {\n\t\t\t@if $bp== \"\" {\n\t\t\t\t.d-#{$k} {\n\t\t\t\t\tdisplay: #{$v};\n\t\t\t\t}\n\t\t\t} @else {\n\t\t\t\t.d-#{$bp}-#{$k} {\n\t\t\t\t\tdisplay: #{$v};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// * FLEXBOX FACTORS: Grow, Shrink and Basis\n// @mixin createFlexFactor($bp: \"\") {\n// \t@if ($classes == true) {\n// \t\t@if ($bp == \"\") {\n// \t\t\t@for $i from 0 through 10 {\n// \t\t\t\t.flex-grow-#{$i} {\n// \t\t\t\t\tflex-grow: #{$i};\n// \t\t\t\t}\n\n// \t\t\t\t.flex-shrink-#{$i} {\n// \t\t\t\t\tflex-shrink: #{$i};\n// \t\t\t\t}\n// \t\t\t}\n\n// \t\t\t@for $i from 0 through 20 {\n// \t\t\t\t.flex-basis-#{$i} {\n// \t\t\t\t\tflex-basis: calc(100% / #{$i});\n// \t\t\t\t}\n// \t\t\t}\n// \t\t} @else {\n// \t\t\t@for $i from 0 through 10 {\n// \t\t\t\t.flex-grow-#{$bp}-#{$i} {\n// \t\t\t\t\tflex-grow: #{$i};\n// \t\t\t\t}\n\n// \t\t\t\t.flex-shrink-#{$bp}-#{$i} {\n// \t\t\t\t\tflex-shrink: #{$i};\n// \t\t\t\t}\n// \t\t\t}\n\n// \t\t\t@for $i from 0 through 10 {\n// \t\t\t\t.flex-basis-#{$bp}-#{$i} {\n// \t\t\t\t\tflex-basis: calc(100% / #{$i});\n// \t\t\t\t}\n// \t\t\t}\n// \t\t}\n// \t}\n// }\n\n// * FLEXBOX: ALIGNMENTS: items and justify\n@mixin createFlexAlignments($bp: \"\") {\n\t$alignItems: (\n\t\t\"start\": flex-start,\n\t\t\"end\": flex-end,\n\t\t\"center\": center,\n\t\t\"baseline\": baseline,\n\t\t\"stretch\": stretch,\n\t);\n\n\t$justifyContent: (\n\t\t\"start\": flex-start,\n\t\t\"end\": flex-end,\n\t\t\"center\": center,\n\t\t\"around\": space-around,\n\t\t\"between\": space-between,\n\t\t\"evenly\": space-evenly,\n\t);\n\n\t@if $classes == true {\n\t\t@if ($items == true) {\n\t\t\t@each $k, $v in $alignItems {\n\t\t\t\t@if ($bp == \"\") {\n\t\t\t\t\t.items-#{$k} {\n\t\t\t\t\t\talign-items: #{$v};\n\t\t\t\t\t}\n\t\t\t\t} @else {\n\t\t\t\t\t.items-#{$bp}-#{$k} {\n\t\t\t\t\t\talign-items: #{$v};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t@if ($justify == true) {\n\t\t\t@each $k, $v in $justifyContent {\n\t\t\t\t@if ($bp == \"\") {\n\t\t\t\t\t.justify-#{$k} {\n\t\t\t\t\t\tjustify-content: #{$v};\n\t\t\t\t\t}\n\t\t\t\t} @else {\n\t\t\t\t\t.justify-#{$k}-#{$bp} {\n\t\t\t\t\t\tjustify-content: #{$v};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// * FLEXBOX: WORKFLOWS: Direction and Wraps\n@mixin createFlexFlows($bp: \"\") {\n\t$flexDirections: (\n\t\t\"row\": row,\n\t\t\"row-reverse\": row-reverse,\n\t\t\"column\": column,\n\t\t\"column-reverse\": column-reverse,\n\t);\n\n\t$flexWraps: (\n\t\t\"wrap\": wrap,\n\t\t\"wrap-reverse\": wrap-reverse,\n\t\t\"nowrap\": nowrap,\n\t);\n\n\t@if ($classes == true) {\n\t\t@if ($bp == \"\") {\n\t\t\t@each $k, $v in $flexDirections {\n\t\t\t\t.flex-#{$k} {\n\t\t\t\t\tflex-direction: #{$v};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@each $k, $v in $flexWraps {\n\t\t\t\t.flex-#{$k} {\n\t\t\t\t\tflex-wrap: #{$v};\n\t\t\t\t}\n\t\t\t}\n\t\t} @else {\n\t\t\t@each $k, $v in $flexDirections {\n\t\t\t\t.flex-#{$bp}-#{$k} {\n\t\t\t\t\tflex-direction: #{$v};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@each $k, $v in $flexWraps {\n\t\t\t\t.flex-#{$bp}-#{$k} {\n\t\t\t\t\tflex-wrap: #{$v};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// * FLEXBOX ORDERING:\n@mixin createFlexOrdering($bp: \"\", $negative: true) {\n\t@if ($classes == true) {\n\t\t@if ($bp == \"\") {\n\t\t\t@for $i from 1 through 10 {\n\t\t\t\t@if ($negative == true) {\n\t\t\t\t\t.order_#{$i} {\n\t\t\t\t\t\torder: -#{$i};\n\t\t\t\t\t}\n\t\t\t\t} @else {\n\t\t\t\t\t.order-#{$i} {\n\t\t\t\t\t\torder: #{$i};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} @else {\n\t\t\t@for $i from 1 through 10 {\n\t\t\t\t@if ($negative == true) {\n\t\t\t\t\t.order_#{$bp}#{$i} {\n\t\t\t\t\t\torder: -#{$i};\n\t\t\t\t\t}\n\t\t\t\t} @else {\n\t\t\t\t\t.order-#{$bp}-#{$i} {\n\t\t\t\t\t\torder: #{$i};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// * FLEXBOX: COLUMN GRID SYSTEM:\n@mixin createFlexColumnsGrid($bp: \"\", $columns, $gutter) {\n\t@if ($classes == true) {\n\t\t@for $i from 1 through $columns {\n\t\t\t@if ($bp == \"\") {\n\t\t\t\t.flex-col-#{$i} {\n\t\t\t\t\tflex: 0 0 #{math.div($i, $columns) * 100%};\n\t\t\t\t\tmax-width: #{math.div($i, $columns) * 100%};\n\t\t\t\t\tpadding-left: math.div($gutter, 2);\n\t\t\t\t\tpadding-right: math.div($gutter, 2);\n\t\t\t\t}\n\t\t\t} @else {\n\t\t\t\t.flex-col-#{$bp}-#{$i} {\n\t\t\t\t\tflex: 0 0 #{math.div($i, $columns) * 100%};\n\t\t\t\t\tmax-width: #{math.div($i, $columns) * 100%};\n\t\t\t\t\tpadding-left: math.div($gutter, 2);\n\t\t\t\t\tpadding-right: math.div($gutter, 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n//----------------------------------------------------------------\n// ? GRIDBOX UTILS:\n\n// * GRID TEMPLATE PROPS: Columns, Rows and Auto Cols & Rows\n@mixin createGridTemplates($bp: \"\") {\n\t@if ($classes == true) {\n\t\t@if ($bp == \"\") {\n\t\t\t@for $i from 1 through 12 {\n\t\t\t\t.grid-cols-#{$i} {\n\t\t\t\t\tgrid-template-columns: repeat($i, minmax(auto, 1fr));\n\t\t\t\t}\n\t\t\t\t.grid-rows-#{$i} {\n\t\t\t\t\tgrid-template-rows: repeat($i, minmax(auto, 1fr));\n\t\t\t\t}\n\n\t\t\t\t.grid-autocols-#{$i} {\n\t\t\t\t\tgrid-auto-columns: #{$i * 1fr};\n\t\t\t\t}\n\n\t\t\t\t.grid-autorows-#{$i} {\n\t\t\t\t\tgrid-auto-rows: #{$i * 1fr};\n\t\t\t\t}\n\t\t\t}\n\t\t} @else {\n\t\t\t@for $i from 1 through 12 {\n\t\t\t\t.grid-cols-#{$bp}-#{$i} {\n\t\t\t\t\tgrid-template-columns: repeat($i, minmax(auto, 1fr));\n\t\t\t\t}\n\t\t\t\t.grid-rows-#{$bp}-#{$i} {\n\t\t\t\t\tgrid-template-rows: repeat($i, 1fr);\n\t\t\t\t}\n\n\t\t\t\t.grid-autocols-#{$bp}-#{$i} {\n\t\t\t\t\tgrid-auto-columns: #{$i * 1fr};\n\t\t\t\t}\n\n\t\t\t\t.grid-autorows-#{$bp}-#{$i} {\n\t\t\t\t\tgrid-auto-rows: #{$i * 1fr};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// * GRID SPREADING PROPS: Start and End Cols and Rows:\n@mixin createGridSpans($bp: \"\") {\n\t@if ($classes == true) {\n\t\t@if ($bp == \"\") {\n\t\t\t@for $i from 1 through 12 {\n\t\t\t\t.grid-colstart-#{$i} {\n\t\t\t\t\tgrid-column-start: #{$i};\n\t\t\t\t}\n\n\t\t\t\t.grid-colend-#{$i} {\n\t\t\t\t\tgrid-column-end: #{$i};\n\t\t\t\t}\n\n\t\t\t\t.grid-rowstart-#{$i} {\n\t\t\t\t\tgrid-row-start: #{$i};\n\t\t\t\t}\n\n\t\t\t\t.grid-rowend-#{$i} {\n\t\t\t\t\tgrid-row-end: #{$i};\n\t\t\t\t}\n\t\t\t}\n\t\t} @else {\n\t\t\t@for $i from 1 through 12 {\n\t\t\t\t.grid-colstart-#{$bp}-#{$i} {\n\t\t\t\t\tgrid-column-start: #{$i};\n\t\t\t\t}\n\n\t\t\t\t.grid-colend-#{$bp}-#{$i} {\n\t\t\t\t\tgrid-column-end: #{$i};\n\t\t\t\t}\n\n\t\t\t\t.grid-rowstart-#{$bp}-#{$i} {\n\t\t\t\t\tgrid-row-start: #{$i};\n\t\t\t\t}\n\n\t\t\t\t.grid-rowend-#{$bp}-#{$i} {\n\t\t\t\t\tgrid-row-end: #{$i};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// * GRID GAPS MEASURES: Cols and Rows Gutter:\n@mixin createGridGutters($bp: \"\") {\n\t@if ($class == true) {\n\t\t@if ($bp == \"\") {\n\t\t\t@for $i from 1 through 100 {\n\t\t\t\t.gap-col-#{$i} {\n\t\t\t\t\tcolumn-gap: #{$i * 1px};\n\t\t\t\t}\n\n\t\t\t\t.gap-row-#{$i} {\n\t\t\t\t\trow-gap: #{$i * 1px};\n\t\t\t\t}\n\t\t\t}\n\t\t} @else {\n\t\t\t.gap-col-#{$bp}-#{$i} {\n\t\t\t\tcolumn-gap: #{$i * 1px};\n\t\t\t}\n\n\t\t\t.gap-row-#{$bp}-#{$i} {\n\t\t\t\trow-gap: #{$i * 1px};\n\t\t\t}\n\t\t}\n\t}\n}\n\n//----------------------------------------------------------------\n// ? THEMES UTILS:\n\n// * FONT FAMILIES UTILS:\n@mixin createFontFamilies($bp: \"\") {\n\t$font-families: (\n\t\t\"display\": '\"Jost\", sans-serif',\n\t\t\"serif\": '\"Lora\", serif',\n\t\t\"code\": '\"Source Code Pro\", monospace',\n\t);\n\n\t@if ($classes == true) {\n\t\t@if ($bp == \"\") {\n\t\t\t@each $k, $family in $font-families {\n\t\t\t\t.ff-#{$k} {\n\t\t\t\t\tfont-family: #{$family};\n\t\t\t\t}\n\t\t\t}\n\t\t} @else {\n\t\t\t@each $k, $family in $font-families {\n\t\t\t\t.ff-#{$bp}-#{$k} {\n\t\t\t\t\tfont-family: #{$family};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// * FONT SIZES MEASURES:\n@mixin createFontSizes($bp: \"\") {\n\t@if ($classes == true) {\n\t\t@for $size from 0 through 72 {\n\t\t\t@if ($bp == \"\") {\n\t\t\t\t.fz-#{$size} {\n\t\t\t\t\tfont-size: #{$size * 0.5 * 0.2 * 1rem};\n\t\t\t\t}\n\t\t\t} @else {\n\t\t\t\t.fz-#{$bp}-#{$size} {\n\t\t\t\t\tfont-size: #{$size * 0.5 * 0.2 * 1rem};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// * FONT WEIGHT MEASURES:\n@mixin createFontWeights($bp: \"\") {\n\t@if ($classes == true) {\n\t\t@for $i from 1 to 10 {\n\t\t\t@if ($bp == \"\") {\n\t\t\t\t.fw-#{$i * 100} {\n\t\t\t\t\tfont-weight: #{$i * 100};\n\t\t\t\t}\n\t\t\t} @else {\n\t\t\t\t.fw-#{$bp}-#{$i * 100} {\n\t\t\t\t\tfont-weight: #{$i * 100};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// * LINEHEIGHTS MEASURES:\n@mixin createLineheights($bp: \"\") {\n\t$line-heights: (\n\t\t\"none\": 0,\n\t\t\"100\": 1,\n\t\t\"133\": 1.33,\n\t\t\"155\": 1.55,\n\t\t\"177\": 1.77,\n\t\t\"200\": 2,\n\t\t\"233\": 2.33,\n\t\t\"255\": 2.55,\n\t\t\"277\": 2.77,\n\t\t\"300\": 3,\n\t);\n\n\t@if ($classes == true) {\n\t\t@each $k, $v in $line-heights {\n\t\t\t@if ($bp == \"\") {\n\t\t\t\t.lh-#{$k} {\n\t\t\t\t\tline-height: #{$v};\n\t\t\t\t}\n\t\t\t} @else {\n\t\t\t\t.lh-#{$bp}-#{$k} {\n\t\t\t\t\tline-height: #{$v};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// * TEXT PROPS AND LIST STYLES:\n@mixin createTextProps($bp: \"\") {\n\t$text-aligns: (\n\t\t\"left\": left,\n\t\t\"center\": center,\n\t\t\"right\": right,\n\t\t\"justify\": justify,\n\t\t\"none\": none,\n\t);\n\t$text-decorations: (\n\t\t\"none\": none,\n\t\t\"underline\": underline,\n\t\t\"overline\": overline,\n\t\t\"line-through\": line-through,\n\t);\n\t$text-transforms: (\n\t\t\"none\": none,\n\t\t\"uppercase\": uppercase,\n\t\t\"lowercase\": lowercase,\n\t\t\"capitalize\": capitalize,\n\t);\n\t$list-styles: (\n\t\t\"none\": none,\n\t\t\"circle\": circle,\n\t\t\"decimal\": decimal,\n\t\t\"decimal-zero\": decimal-leading-zero,\n\t\t\"upper-alpha\": upper-alpha,\n\t\t\"lower-alpha\": lower-alpha,\n\t\t\"upper-roman\": upper-alpha,\n\t\t\"lower-roman\": lower-alpha,\n\t\t\"square\": square,\n\t);\n\n\t@if ($classes == true) {\n\t\t@each $k, $v in $text-aligns {\n\t\t\t@if ($bp == \"\") {\n\t\t\t\t@if ($k == \"none\") {\n\t\t\t\t\t.ta-none {\n\t\t\t\t\t\ttext-align: none;\n\t\t\t\t\t}\n\t\t\t\t} @else {\n\t\t\t\t\t.text-#{$k} {\n\t\t\t\t\t\ttext-align: #{$v};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} @else {\n\t\t\t\t@if ($k == \"none\") {\n\t\t\t\t\t.ta-#{$bp}-none {\n\t\t\t\t\t\ttext-align: none;\n\t\t\t\t\t}\n\t\t\t\t} @else {\n\t\t\t\t\t.text-#{$bp}-#{$k} {\n\t\t\t\t\t\ttext-align: #{$v};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t@each $k, $v in $text-decorations {\n\t\t\t@if ($bp == \"\") {\n\t\t\t\t@if ($k == \"none\") {\n\t\t\t\t\t.tde-none {\n\t\t\t\t\t\ttext-decoration: none;\n\t\t\t\t\t}\n\t\t\t\t} @else {\n\t\t\t\t\t.text-#{$k} {\n\t\t\t\t\t\ttext-decoration: #{$v};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} @else {\n\t\t\t\t@if ($k == \"none\") {\n\t\t\t\t\t.tde-#{$bp}-none {\n\t\t\t\t\t\ttext-decoration: none;\n\t\t\t\t\t}\n\t\t\t\t} @else {\n\t\t\t\t\t.text-#{$bp}-#{$k} {\n\t\t\t\t\t\ttext-decoration: #{$v};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t@each $k, $v in $text-transforms {\n\t\t\t@if ($bp == \"\") {\n\t\t\t\t@if ($k == \"none\") {\n\t\t\t\t\t.ttr-none {\n\t\t\t\t\t\ttext-transform: none;\n\t\t\t\t\t}\n\t\t\t\t} @else {\n\t\t\t\t\t.text-#{$k} {\n\t\t\t\t\t\ttext-transform: #{$v};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} @else {\n\t\t\t\t@if ($k == \"none\") {\n\t\t\t\t\t.ttr-#{$bp}-none {\n\t\t\t\t\t\ttext-transform: none;\n\t\t\t\t\t}\n\t\t\t\t} @else {\n\t\t\t\t\t.text-#{$bp}-#{$k} {\n\t\t\t\t\t\ttext-transform: #{$v};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t@each $k, $v in $list-styles {\n\t\t\t@if ($bp == \"\") {\n\t\t\t\t@if ($k == \"none\") {\n\t\t\t\t\t.list-style-none {\n\t\t\t\t\t\tlist-style: none;\n\t\t\t\t\t}\n\t\t\t\t} @else {\n\t\t\t\t\t.list-#{$k} {\n\t\t\t\t\t\tlist-style: #{$v};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} @else {\n\t\t\t\t@if ($k == \"none\") {\n\t\t\t\t\t.list-style-#{$bp}-none {\n\t\t\t\t\t\tlist-style: none;\n\t\t\t\t\t}\n\t\t\t\t} @else {\n\t\t\t\t\t.list-#{$bp}-#{$k} {\n\t\t\t\t\t\tlist-style: #{$v};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// * BRAND COLORS: BkgColor, TextColor and HoverColors:\n@mixin createThemeColors($bp: \"\") {\n\t$brandColors: (\n\t\t\"current\": currentColor,\n\t\t\"alpha\": transparent,\n\t\t\"none\": none,\n\t\t\"indigo\": #3d14b8,\n\t\t\"salmon\": #ff6347,\n\t\t\"teal\": #0e8181,\n\t\t\"persian\": #071f40,\n\t\t\"success\": #18dc7a,\n\t\t\"danger\": #e6192a,\n\t\t\"warning\": #f2d40d,\n\t\t\"info\": #1991e6,\n\t\t\"gray100\": #d7d6dc,\n\t\t\"gray200\": #9da4af,\n\t\t\"gray300\": #878a92,\n\t\t\"gray400\": #3e3b45,\n\t\t\"light\": #f0f0f0,\n\t\t\"dark\": #1c1c22,\n\t);\n\n\t@if ($classes == true) {\n\t\t@if ($bp == \"\") {\n\t\t\t@each $k, $v in $brandColors {\n\t\t\t\t.bg-#{$k} {\n\t\t\t\t\tbackground-color: #{$v};\n\t\t\t\t}\n\t\t\t\t.bg-hover-#{$k}:hover {\n\t\t\t\t\tbackground-color: #{$v};\n\t\t\t\t}\n\t\t\t\t.color-#{$k} {\n\t\t\t\t\tcolor: #{$v};\n\t\t\t\t}\n\t\t\t\t.color-hover-#{$k}:hover {\n\t\t\t\t\tcolor: #{$v};\n\t\t\t\t}\n\t\t\t}\n\t\t} @else {\n\t\t\t@each $k, $v in $brandColors {\n\t\t\t\t.bg-#{$bp}-#{$k} {\n\t\t\t\t\tbackground-color: #{$v};\n\t\t\t\t}\n\t\t\t\t.bg-hover-#{$bp}-#{$k}:hover {\n\t\t\t\t\tbackground-color: #{$v};\n\t\t\t\t}\n\t\t\t\t.color-#{$bp}-#{$k} {\n\t\t\t\t\tcolor: #{$v};\n\t\t\t\t}\n\t\t\t\t.color-hover-#{$bp}-#{$k}:hover {\n\t\t\t\t\tcolor: #{$v};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// * BREAKPOINTS AND MEDIA QUERIES SIZES:\n@mixin media-up($device) {\n\t@media screen and (min-width: map-get($breakpoints, #{$device})) {\n\t\t@content;\n\t}\n}\n\n@mixin media-down($device) {\n\t@media screen and (max-width: map-get($breakpoints, #{$device})) {\n\t\t@content;\n\t}\n}\n"]}